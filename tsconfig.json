{
  "compilerOptions": {
    /* Language and Environment */
    "target": "es2016",                                  /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */
    "module": "commonjs",                                /* Specify what module code is generated. */
    "jsx": "react-jsx",                                 /* Specify JSX code generation mode for React. */
    "esModuleInterop": true,                             /* Emit additional JavaScript to ease support for importing CommonJS modules. */
    "forceConsistentCasingInFileNames": true,            /* Ensure that casing is correct in imports. */
    "strict": true,                                      /* Enable all strict type-checking options. */
    "skipLibCheck": true,                                /* Skip type checking of declaration files. */
    "resolveJsonModule": true,                           /* Enable importing .json files. */
    "sourceMap": true,                                  /* Create source map files for emitted JavaScript files. */
    "outDir": "./dist",                                 /* Specify an output folder for all emitted files. */
    "rootDir": "./src",                                 /* Specify the root folder within your source files. */
    "declaration": true,                                /* Generate .d.ts files from TypeScript and JavaScript files in your project. */
    "declarationMap": true,                             /* Create sourcemaps for d.ts files. */
    "moduleResolution": "node",                          /* Specify how TypeScript looks up a file from a given module specifier. */
    "resolvePackageJsonExports": true,                   /* Use the package.json 'exports' field when resolving package imports. */
    "resolvePackageJsonImports": true,                   /* Use the package.json 'imports' field when resolving imports. */
    "isolatedModules": true,                            /* Ensure that each file can be safely transpiled without relying on other imports. */
    "noEmitOnError": true,                              /* Disable emitting files if any type checking errors are reported. */
    "downlevelIteration": true,                         /* Emit more compliant, but verbose and less performant JavaScript for iteration. */
    "importHelpers": true,                              /* Allow importing helper functions from tslib once per project. */
    "strictNullChecks": true,                           /* When type checking, take into account 'null' and 'undefined'. */
    "noImplicitAny": true,                              /* Enable error reporting for expressions and declarations with an implied 'any' type. */
    "noUnusedLocals": true,                            /* Enable error reporting when local variables aren't read. */
    "noUnusedParameters": true,                         /* Raise an error when a function parameter isn't read. */
    "exactOptionalPropertyTypes": true,                 /* Interpret optional property types as written, rather than adding 'undefined'. */
    "noImplicitReturns": true,                          /* Enable error reporting for codepaths that do not explicitly return in a function. */
    "noFallthroughCasesInSwitch": true                   /* Enable error reporting for fallthrough cases in switch statements. */
  },
  "include": ["src/**/*"],                             /* Specify files or patterns to include in the compilation. */
  "exclude": ["node_modules", "**/*.test.ts", "**/*.test.tsx"] /* Specify files or patterns to exclude from the compilation. */
}
